import{_ as a,o as e,c as n,O as t}from"./chunks/framework.9a689936.js";const p=JSON.parse('{"title":"Maven","description":"","frontmatter":{},"headers":[],"relativePath":"Java/Maven.md"}'),r={name:"Java/Maven.md"},o=t('<h1 id="maven" tabindex="-1">Maven <a class="header-anchor" href="#maven" aria-label="Permalink to &quot;Maven&quot;">​</a></h1><h2 id="为什么使用maven-原因、优势" tabindex="-1">为什么使用maven?(原因、优势) <a class="header-anchor" href="#为什么使用maven-原因、优势" aria-label="Permalink to &quot;为什么使用maven?(原因、优势)&quot;">​</a></h2><p>传统项目管理状况分析:<br>     当项目中运用到多种技术时,每个技术之间相互联系运作, 例如5版本的mybaties与4版本的junit等等技术结合;但是当项目需要更新换代时, 一个技术的提升其他相应的也都要跟着提升,要不然可能会出现jar包不统一或兼容的问题; 测试环境的不同,运行出来的结果也不同,在Linux下与在window下运行的结果是不同的, 这就需要在Linux在重新编译,但是Linux是不支持类似idea的图形界面的,以及一系列其他问题......</p><p>而Maven作为一种项目管理工具可以很好的管理上述出现的问题以及未提到的问题</p><h2 id="maven-1" tabindex="-1">Maven <a class="header-anchor" href="#maven-1" aria-label="Permalink to &quot;Maven&quot;">​</a></h2>',5),i=[o];function s(_,c,d,v,h,l){return e(),n("div",null,i)}const u=a(r,[["render",s]]);export{p as __pageData,u as default};
