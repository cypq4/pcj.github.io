import{_ as t,o,c as s,E as r,B as i,z as e,a,G as c}from"./chunks/framework.12af29fb.js";const N=JSON.parse('{"title":"Maven","description":"","frontmatter":{},"headers":[],"relativePath":"Java/Maven.md"}'),d={name:"Java/Maven.md"},l=e("h1",{id:"maven",tabindex:"-1"},[a("Maven "),e("a",{class:"header-anchor",href:"#maven","aria-label":'Permalink to "Maven"'},"​")],-1),_=e("h2",{id:"为什么使用maven-原因、优势",tabindex:"-1"},[a("为什么使用maven?(原因、优势) "),e("a",{class:"header-anchor",href:"#为什么使用maven-原因、优势","aria-label":'Permalink to "为什么使用maven?(原因、优势)"'},"​")],-1),m=e("p",null,"传统项目管理状况分析:",-1),v=e("blockquote",null,[e("p",null,"而Maven作为一种项目管理工具可以很好的管理上述出现的问题以及未提到的问题")],-1),h=e("h2",{id:"maven-1",tabindex:"-1"},[a("Maven "),e("a",{class:"header-anchor",href:"#maven-1","aria-label":'Permalink to "Maven"'},"​")],-1);function p(u,f,x,M,b,k){const n=c("font");return o(),s("div",null,[l,_,m,r(n,{size:"2"},{default:i(()=>[a("     当项目中运用到多种技术时,每个技术之间相互联系运作, 例如5版本的mybaties与4版本的junit等等技术结合;但是当项目需要更新换代时, 一个技术的提升其他相应的也都要跟着提升,要不然可能会出现jar包不统一或兼容的问题; 测试环境的不同,运行出来的结果也不同,在Linux下与在window下运行的结果是不同的, 这就需要在Linux在重新编译,但是Linux是不支持类似idea的图形界面的,以及一系列其他问题...... ")]),_:1}),v,h])}const P=t(d,[["render",p]]);export{N as __pageData,P as default};
